{"version":3,"sources":["index.js","effect.js","easing.js","animator.js","utils.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AGRA,ADGA,ADGA,ADGA;AGRA,ADGA,ADGA,ADGA;AGRA,ADGA,ADGA,ADGA;AGRA,ADGA,ADGA,ADGA,AIZA;ADIA,ADGA,ADGA,ADGA,AIZA;ADIA,ADGA,ADGA,ADGA,AIZA;ADIA,ADGA,ADGA,ADGA,AIZA;ADIA,ADGA,ADGA,ADGA,AIZA;ADIA,ADGA,ADGA,ADGA,AIZA;ADIA,ADGA,ADGA,ADGA,AIZA;ADIA,ADGA,ADGA,ADGA,AIZA;ADIA,ADGA,ADGA,ADGA,AIZA;ADIA,ADGA,AFMA,AIZA;ADIA,ADGA,AFMA,AIZA;ADIA,ADGA,AFMA,AIZA;ADIA,ADGA,AFMA,AIZA;ADIA,ADGA,AFMA,AIZA;ADIA,ADGA,AFMA,AIZA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Timeline = exports.Effects = exports.Easings = exports.Animator = undefined;\n\nvar _spriteTimeline = require('sprite-timeline');\n\nvar _spriteTimeline2 = _interopRequireDefault(_spriteTimeline);\n\nvar _effect = require('./effect');\n\nvar _effect2 = _interopRequireDefault(_effect);\n\nvar _easing = require('./easing');\n\nvar _animator = require('./animator');\n\nvar _animator2 = _interopRequireDefault(_animator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Animator = _animator2.default;\nexports.Easings = _easing.Easings;\nexports.Effects = _effect2.default;\nexports.Timeline = _spriteTimeline2.default;","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  // s - startFrame, e - endFrame\n  default: function _default(from, to, p, s, e) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      return from + (p - s) / (e - s) * (to - from);\n    }\n\n    if (p - s > e - p) {\n      return to;\n    }\n    return from;\n  }\n};","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseEasing = exports.Easings = undefined;\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _map = require('babel-runtime/core-js/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BezierEasing = require('bezier-easing');\nvar bezierFuncCache = new _map2.default();\n\nfunction getBezierEasing() {\n  for (var _len = arguments.length, value = Array(_len), _key = 0; _key < _len; _key++) {\n    value[_key] = arguments[_key];\n  }\n\n  var easing = bezierFuncCache.get(value);\n  if (easing) {\n    return easing;\n  }\n  easing = BezierEasing.apply(undefined, value);\n  bezierFuncCache.set(value, easing);\n  return easing;\n}\n\nfunction getStepsEasing(step) {\n  var pos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'end';\n\n  return function (p, frames) {\n    for (var i = 1; i < frames.length; i++) {\n      var offset = frames[i].offset;\n\n      if (p <= offset) {\n        var start = frames[i - 1].offset,\n            end = offset;\n        var fp = (p - start) / (end - start),\n            d = 1 / step;\n\n        var t = fp / d;\n        if (pos === 'end') {\n          t = Math.floor(t);\n        } else {\n          t = Math.ceil(t);\n        }\n\n        return d * t * (end - start) + start;\n      }\n    }\n    return 0;\n  };\n}\n\nfunction parseEasingStr(easingStr) {\n  var pattern = /^cubic-bezier\\((.*)\\)/,\n      matched = easingStr.match(pattern);\n\n  if (matched) {\n    var value = matched[1].trim();\n    value = value.split(',').map(function (v) {\n      return parseFloat(v.trim());\n    });\n    return getBezierEasing.apply(undefined, (0, _toConsumableArray3.default)(value));\n  }\n\n  pattern = /^steps\\((.*)\\)/;\n  matched = easingStr.match(pattern);\n\n  if (matched) {\n    var _value = matched[1].trim();\n    _value = _value.split(',').map(function (v) {\n      return v.trim();\n    });\n\n    var _value2 = _value,\n        _value3 = (0, _slicedToArray3.default)(_value2, 2),\n        step = _value3[0],\n        pos = _value3[1];\n\n    return getStepsEasing(parseInt(step, 10), pos);\n  }\n  return easingStr;\n}\n\nvar Easings = {\n  linear: function linear(p) {\n    return p;\n  },\n\n  ease: getBezierEasing(0.25, 0.1, 0.25, 1),\n  'ease-in': getBezierEasing(0.42, 0, 1, 1),\n  'ease-out': getBezierEasing(0, 0, 0.58, 1),\n  'ease-in-out': getBezierEasing(0.42, 0, 0.58, 1),\n  // 'step-start': function(p, frames){\n  //   let ret = 0\n  //   for(let i = 0; i < frames.length; i++){\n  //     const {offset} = frames[i]\n  //     ret = offset\n  //     if(p < offset){\n  //       break\n  //     }\n  //   }\n  //   return ret\n  // },\n  // 'step-end': function(p, frames){\n  //   let ret = 0\n  //   for(let i = 0; i < frames.length; i++){\n  //     const {offset} = frames[i]\n  //     if(p < offset){\n  //       break\n  //     }\n  //     ret = offset\n  //   }\n  //   return ret\n  // }\n  'step-start': getStepsEasing(1, 'start'),\n  'step-end': getStepsEasing(1, 'end')\n};\n\nfunction parseEasing(easing) {\n  if (typeof easing === 'string') {\n    if (!Easings[easing]) {\n      easing = parseEasingStr(easing);\n    } else {\n      // load default Easing\n      easing = Easings[easing];\n    }\n  } else if (easing.type === 'cubic-bezier') {\n    easing = getBezierEasing.apply(undefined, (0, _toConsumableArray3.default)(easing.value));\n  } else if (easing.type === 'steps') {\n    easing = getStepsEasing(easing.step, easing.pos);\n  }\n  return easing;\n}\n\nexports.Easings = Easings;\nexports.parseEasing = parseEasing;","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _symbol = require('babel-runtime/core-js/symbol');\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _spriteTimeline = require('sprite-timeline');\n\nvar _spriteTimeline2 = _interopRequireDefault(_spriteTimeline);\n\nvar _utils = require('./utils');\n\nvar _easing = require('./easing');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _timing = (0, _symbol2.default)('timing'),\n    _keyframes = (0, _symbol2.default)('keyframes'),\n    _initState = (0, _symbol2.default)('initState'),\n    _readyDefer = (0, _symbol2.default)('readyDefer'),\n    _finishedDefer = (0, _symbol2.default)('finishedDefer'),\n    _effects = (0, _symbol2.default)('effects'),\n    _activeReadyTimer = (0, _symbol2.default)('activeReadyTimer'),\n    _activeFinishTimer = (0, _symbol2.default)('activeFinishTimer'),\n    _removeDefer = (0, _symbol2.default)('removeDefer');\n\n/**\n  easing: {\n    type: 'cubic-bezier',\n    value: [...]\n  }\n  easing: {\n    type: 'steps',\n    step: 1,\n    pos: 'end'\n  }\n */\nvar defaultTiming = {\n  delay: 0,\n  endDelay: 0,\n  fill: 'auto',\n  iterations: 1.0,\n  playbackRate: 1.0,\n  direction: 'normal',\n  easing: 'linear',\n  effect: null\n};\n\n/**\n  animation: play --> delay --> effect --> endDelay\n  playState: idle --> pending --> running --> pending --> finished\n */\n\nvar _class = function () {\n  function _class(initState, keyframes, timing) {\n    var _this = this;\n\n    (0, _classCallCheck3.default)(this, _class);\n\n    if (Array.isArray(initState)) {\n      var _ref = [initState[0], initState, keyframes];\n      // 如果 initState 缺省，默认 keyframes 的第一帧为 initState\n\n      initState = _ref[0];\n      keyframes = _ref[1];\n      timing = _ref[2];\n    }\n\n    if (typeof timing === 'number') {\n      timing = { duration: timing };\n    }\n\n    this[_timing] = (0, _assign2.default)({}, defaultTiming, timing);\n    this[_timing].easing = (0, _easing.parseEasing)(this[_timing].easing);\n    this[_keyframes] = (0, _utils.calculateFramesOffset)(keyframes);\n\n    var lastFrame = this[_keyframes][this[_keyframes].length - 1];\n\n    this[_initState] = {}; // 初始状态\n\n    (0, _keys2.default)(lastFrame).forEach(function (key) {\n      if (Object.prototype.hasOwnProperty.call(initState, key)) {\n        if (key !== 'easing' && key !== 'offset') {\n          _this[_initState][key] = initState[key];\n        }\n      }\n    });\n\n    // 补齐参数\n    this[_keyframes] = this[_keyframes].map(function (frame) {\n      return (0, _assign2.default)({}, _this[_initState], frame);\n    });\n\n    if (this[_keyframes][0].offset !== 0) {\n      // 要补第一帧\n      this[_keyframes].unshift((0, _assign2.default)({}, this[_initState], { offset: 0 }));\n    }\n    if (lastFrame.offset < 1) {\n      // 要补最后一帧\n      this[_keyframes].push((0, _assign2.default)({}, lastFrame, { offset: 1 }));\n    }\n\n    this[_effects] = {};\n    this.timeline = null; // idle, no effect\n  }\n\n  (0, _createClass3.default)(_class, [{\n    key: 'pause',\n    value: function pause() {\n      this.timeline.playbackRate = 0;\n    }\n  }, {\n    key: _activeReadyTimer,\n    value: function value() {\n      var _this2 = this;\n\n      if (this[_readyDefer] && !this[_readyDefer].timerID) {\n        if (this.timeline.currentTime < 0) {\n          this[_readyDefer].timerID = this.timeline.setTimeout(function () {\n            _this2[_readyDefer].resolve();\n            delete _this2[_readyDefer];\n          }, { delay: -this.timeline.currentTime, heading: false });\n        } else {\n          this[_readyDefer].timerID = this.timeline.setTimeout(function () {\n            _this2[_readyDefer].resolve();\n            delete _this2[_readyDefer];\n          }, { delay: 0, isEntropy: true });\n        }\n      }\n    }\n  }, {\n    key: _activeFinishTimer,\n    value: function value() {\n      var _this3 = this;\n\n      var _timing2 = this[_timing],\n          duration = _timing2.duration,\n          iterations = _timing2.iterations,\n          endDelay = _timing2.endDelay;\n\n      var delay = Math.ceil(duration * iterations + endDelay - this.timeline.currentTime) + 1;\n      if (this[_finishedDefer] && !this[_finishedDefer].timerID) {\n        this[_finishedDefer].timerID = this.timeline.setTimeout(function () {\n          _this3[_finishedDefer].resolve();\n          _this3[_removeDefer](_readyDefer);\n          _this3[_removeDefer](_finishedDefer);\n        }, { delay: delay, heading: false });\n        this[_finishedDefer].reverseTimerID = this.timeline.setTimeout(function () {\n          _this3[_finishedDefer].resolve();\n          _this3[_removeDefer](_readyDefer);\n          _this3[_removeDefer](_finishedDefer);\n          _this3.timeline = null;\n        }, { delay: -this[_timing].delay - 1, heading: false });\n      }\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.playState === 'finished') {\n        this.cancel();\n      }\n\n      if (this.playState === 'idle') {\n        if (this.playbackRate <= 0) {\n          return;\n        }\n        var _timing3 = this[_timing],\n            delay = _timing3.delay,\n            playbackRate = _timing3.playbackRate,\n            timeline = _timing3.timeline;\n\n        this.timeline = new _spriteTimeline2.default({\n          originTime: delay,\n          playbackRate: playbackRate\n        }, timeline);\n        this[_activeReadyTimer]();\n        this[_activeFinishTimer]();\n      } else if (this.playState === 'paused') {\n        this.timeline.playbackRate = this.playbackRate;\n        this[_activeReadyTimer]();\n      }\n    }\n  }, {\n    key: _removeDefer,\n    value: function value(deferID) {\n      var defered = this[deferID],\n          timeline = this.timeline;\n\n\n      if (defered && timeline) {\n        timeline.clearTimeout(defered.timerID);\n        if (defered.reverseTimerID) {\n          timeline.clearTimeout(defered.reverseTimerID);\n        }\n      }\n      delete this[deferID];\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      this[_removeDefer](_readyDefer);\n      this[_removeDefer](_finishedDefer);\n      this.timeline = null;\n    }\n  }, {\n    key: 'finish',\n    value: function finish() {\n      if (this.timeline) {\n        this.timeline.currentTime = Infinity / this.playbackRate;\n      }\n      this[_removeDefer](_readyDefer);\n      this[_removeDefer](_finishedDefer);\n    }\n  }, {\n    key: 'applyEffects',\n    value: function applyEffects(effects) {\n      return (0, _assign2.default)(this[_effects], effects);\n    }\n  }, {\n    key: 'playbackRate',\n    get: function get() {\n      return this[_timing].playbackRate;\n    },\n    set: function set(rate) {\n      if (this.timeline) {\n        this.timeline.playbackRate = rate;\n      }\n      this[_timing].playbackRate = rate;\n    }\n  }, {\n    key: 'playState',\n    get: function get() {\n      var timeline = this.timeline,\n          _timing4 = this[_timing],\n          iterations = _timing4.iterations,\n          duration = _timing4.duration,\n          endDelay = _timing4.endDelay;\n\n      var state = 'running';\n\n      if (timeline == null) {\n        state = 'idle';\n      } else if (timeline.paused) {\n        state = 'paused';\n      } else if (timeline.currentTime < 0) {\n        // 开始 pending\n        state = 'pending';\n      } else {\n        var ed = timeline.currentTime - iterations * duration;\n        if (ed > 0 && ed < endDelay) {\n          // 结束 pending\n          state = 'pending';\n        } else if (ed >= endDelay) {\n          state = 'finished';\n        }\n      }\n      return state;\n    }\n  }, {\n    key: 'progress',\n    get: function get() {\n      if (!this.timeline) return 0;\n\n      var _timing5 = this[_timing],\n          duration = _timing5.duration,\n          iterations = _timing5.iterations;\n\n      var timeline = this.timeline,\n          playState = this.playState;\n\n      var p = void 0;\n\n      if (playState === 'idle') {\n        p = 0;\n      } else if (playState === 'paused' && timeline.currentTime < 0) {\n        p = 0;\n      } else if (playState === 'pending') {\n        if (timeline.currentTime < 0) {\n          p = 0;\n        } else {\n          var time = timeline.seekLocalTime(iterations * duration);\n          p = (0, _utils.periodicity)(time, duration)[1] / duration;\n        }\n      } else if (playState === 'running' || playState === 'paused') {\n        p = (0, _utils.periodicity)(timeline.currentTime, duration)[1] / duration;\n      }\n\n      if (playState === 'finished') {\n        p = (0, _utils.periodicity)(iterations, 1)[1];\n      }\n\n      return p;\n    }\n  }, {\n    key: 'frame',\n    get: function get() {\n      var playState = this.playState,\n          initState = this[_initState],\n          fill = this[_timing].fill;\n\n\n      if (playState === 'idle') {\n        return initState;\n      }\n\n      var currentTime = this.timeline.currentTime,\n          keyframes = this[_keyframes].slice(0);\n\n      var _getProgress = (0, _utils.getProgress)(this.timeline, this[_timing], this.progress),\n          p = _getProgress.p,\n          inverted = _getProgress.inverted;\n\n      var frameState = initState;\n      if (currentTime < 0 && playState === 'pending') {\n        // 在开始前 delay 阶段\n        if (fill === 'backwards' || fill === 'both') {\n          frameState = inverted ? keyframes[keyframes.length - 1] : keyframes[0];\n        }\n      } else if (playState !== 'pending' && playState !== 'finished' || fill === 'forwards' || fill === 'both') {\n        // 不在 endDelay 或结束状态，或 forwards\n        frameState = (0, _utils.getCurrentFrame)(this[_timing], keyframes, this[_effects], p);\n      }\n      return frameState;\n    }\n  }, {\n    key: 'timing',\n    get: function get() {\n      return this[_timing];\n    }\n  }, {\n    key: 'baseTimeline',\n    set: function set(timeline) {\n      this[_timing].timeline = timeline;\n    },\n    get: function get() {\n      return this[_timing].timeline;\n    }\n  }, {\n    key: 'ready',\n    get: function get() {\n      if (this[_readyDefer]) {\n        return this[_readyDefer].promise;\n      }\n\n      if (this.timeline && this.timeline.currentTime >= 0) {\n        if (this.playState !== 'paused') {\n          return _promise2.default.resolve();\n        }\n      }\n\n      this[_readyDefer] = (0, _utils.defer)();\n      if (this.timeline) {\n        // 已经在 pending 状态\n        this[_activeReadyTimer]();\n      }\n      if (this[_readyDefer]) {\n        return this[_readyDefer].promise;\n      }\n      return _promise2.default.resolve();\n    }\n  }, {\n    key: 'finished',\n    get: function get() {\n      if (this.playState === 'finished') {\n        return _promise2.default.resolve();\n      }\n      if (!this[_finishedDefer]) {\n        this[_finishedDefer] = (0, _utils.defer)();\n\n        if (this.timeline) {\n          this[_activeFinishTimer]();\n        }\n      }\n\n      return this[_finishedDefer].promise;\n    }\n  }]);\n  return _class;\n}();\n\nexports.default = _class;","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _entries = require('babel-runtime/core-js/object/entries');\n\nvar _entries2 = _interopRequireDefault(_entries);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.defer = defer;\nexports.periodicity = periodicity;\nexports.calculateFramesOffset = calculateFramesOffset;\nexports.getProgress = getProgress;\nexports.getCurrentFrame = getCurrentFrame;\n\nvar _easing2 = require('./easing');\n\nvar _effect = require('./effect');\n\nvar _effect2 = _interopRequireDefault(_effect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction defer() {\n  var ret = {};\n  ret.promise = new _promise2.default(function (resolve, reject) {\n    ret.resolve = resolve;\n    ret.reject = reject;\n  });\n  return ret;\n}\n\nfunction periodicity(val, dur) {\n  var t = Math.floor(val / dur);\n  var v = val - t * dur;\n  if (v === 0 && t > 0) {\n    v = dur;\n    t--;\n  }\n  return [t, v];\n}\n\nfunction calculateFramesOffset(keyframes) {\n  keyframes = keyframes.slice(0);\n\n  var firstFrame = keyframes[0],\n      lastFrame = keyframes[keyframes.length - 1];\n\n  lastFrame.offset = lastFrame.offset || 1;\n  firstFrame.offset = firstFrame.offset || 0;\n\n  var offset = 0,\n      offsetFrom = -1;\n\n  for (var i = 0; i < keyframes.length; i++) {\n    var frame = keyframes[i];\n    if (frame.offset != null) {\n      var dis = i - offsetFrom;\n      if (dis > 1) {\n        var delta = (frame.offset - offset) / dis;\n        for (var j = 0; j < dis - 1; j++) {\n          keyframes[offsetFrom + j + 1].offset = offset + delta * (j + 1);\n        }\n      }\n      offset = frame.offset;\n      offsetFrom = i;\n    }\n    if (frame.easing != null) {\n      frame.easing = (0, _easing2.parseEasing)(frame.easing);\n    }\n    if (i > 0) {\n      var hasEasing = keyframes[i].easing != null;\n      // 如果中间某个属性没有了，需要从前一帧复制过来\n      keyframes[i] = (0, _assign2.default)({}, keyframes[i - 1], keyframes[i]);\n      if (!hasEasing) {\n        // easing 不能复制\n        delete keyframes[i].easing;\n      }\n    }\n  }\n\n  return keyframes;\n}\n\nfunction getProgress(timeline, timing, p) {\n  var currentTime = timeline.currentTime,\n      direction = timing.direction,\n      duration = timing.duration;\n\n  var inverted = false;\n  if (direction === 'reverse') {\n    p = 1 - p;\n    inverted = true;\n  } else if (direction === 'alternate' || direction === 'alternate-reverse') {\n    var period = Math.floor(currentTime / duration);\n\n    if (p === 1) period--;\n    // period = Math.max(0, period)\n\n    if (period % 2 ^ direction === 'alternate-reverse') {\n      p = 1 - p;\n      inverted = true;\n    }\n  }\n  return { p: p, inverted: inverted };\n}\n\nfunction calculateFrame(previousFrame, nextFrame, effects, p) {\n  var ret = {};\n  (0, _entries2.default)(nextFrame).forEach(function (_ref) {\n    var _ref2 = (0, _slicedToArray3.default)(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (key !== 'offset' && key !== 'easing') {\n      var effect = effects[key] || effects.default;\n\n      var v = effect(previousFrame[key], value, p, previousFrame.offset, nextFrame.offset);\n\n      if (v != null) {\n        ret[key] = v;\n      }\n    }\n  });\n  return ret;\n}\n\nfunction getCurrentFrame(timing, keyframes, effects, p) {\n  var easing = timing.easing,\n      effect = timing.effect;\n\n\n  if (!effect) {\n    // timing.effect 会覆盖掉 Effects 和 animator.applyEffects 中定义的 effects\n    effects = (0, _assign2.default)({}, effects, _effect2.default);\n  }\n\n  var ret = {};\n\n  p = easing(p, keyframes);\n\n  for (var i = 1; i < keyframes.length; i++) {\n    var frame = keyframes[i],\n        offset = frame.offset;\n\n    if (offset >= p || i === keyframes.length - 1) {\n      var previousFrame = keyframes[i - 1],\n          previousOffset = previousFrame.offset,\n          _easing = previousFrame.easing;\n\n      var ep = p;\n      if (_easing) {\n        var d = offset - previousOffset;\n        ep = _easing((p - previousOffset) / d) * d + previousOffset;\n      }\n\n      if (effect) {\n        ret = effect(previousFrame, frame, ep, previousOffset, offset);\n      } else {\n        ret = calculateFrame(previousFrame, frame, effects, ep);\n      }\n      break;\n    }\n  }\n\n  return ret;\n}"]}